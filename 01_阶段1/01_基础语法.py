# 定义变量
money = 500
print("总金额：", money)

# 简单计算 + - * /
print("买机票100元")
money = money - 100
print("剩余：", money)
money = money * 100
print("收益翻了100倍：", money)
print("收益又加了1元：", money + 100)

# type函数 查看变量里存储的数据类型
print("变量存储的monty的类型：", type(money))
print("字符串字面量的类型：", type("hello"))  # <class 'str'>
print("浮点型字面量的类型：", type(13.0))

# 四、数据类型转换
# 数字转成字符串 str()
num = 33
numStr = str(num)
print("numStr type:", type(numStr), numStr)
# 字符串转成数字 int()
num2 = int("22")
print("num2 type:", type(num2), num2)
# 整数转成浮点数 float()
numf = "22"
print(type(numf), float(numf))
# 万物皆可转字符串
# 浮点数转整数会丢失精度


# 五、标识符  命名规则同java
# 内容限定：不推荐使用中文，不能使用数字开头
# 大小写敏感
# 不要使用关键字 False True  None 其余都是小写的关键字lambda

# 六、变量命名规范-见名知意
# 1.明了 name
# 2.简洁
# 3.下划线命名法

# 七、运算符 -算数运算符
# + - * / 加减乘除
# // 取整除的结果 返回商的整数部分 9//2结果为4，9.0//2.0输出结果为4.0
# % 取余数
# ** 指数 a**b就是a的b次方
print("1+1:", 1 + 1)
print("5-3:", 5 - 3)
print("1*1:", 1 * 1)
print("11/2:", 11 / 2)  # 11/2: 5.5
print("11//2:", 11 // 2)  # 11//2: 5
print("11%2:", 11 % 2)  # 11%2: 1
print("2**3:", 2 ** 3)  # 2**3: 8
# 赋值运算符
num = 1 + 2 * 3
# 符合复制运算符
# +=、-=、*=、/=、%=、**=、//=
num = 1
num += 1
print("num += 1的值", num)

# 八、字符串的三种定义方式
# 1.单引号定义
name1 = '程序员'
# 2.双引号
name2 = ""
# 3.三引号
# 三引号定义法和多行注释的写法一样，同样支持换行操作
# 使用变量接收它他就是字符串
# 不适用变量接收它它就可以座位多行注释使用
name3 = """
我是
一名
程序员
"""

"""这是多行注释，请区别三引号"""
print(type(name3), "name3:", name3)

# 在字符串内 包含双引号
name4 = '"程序员"'
print("name4:", name4)
# 在字符串内包含单引号
name5 = "'hello'"
print("name5:", name5)
# 使用转义字符 \ 解除引号的作用
name6 = "\'hello\'"
print("name66:", name6)

# 九 字符串的拼接
# 字面量与字面量之间的拼接
print("我是程序员", "在北京工作")
# 字符串字面量和字符串变量的拼接
name7 = "张三"
adress = "北京市海淀区维亚大厦"
print("名字：" + name7 + "，我的地址：" + adress)

# 字符串格式化1 -> %s占位符拼接
info1 = "单个占位符-> %s" % name7
print(info1)
age = 19
info2 = "多个占位符样例-> 名字：%s，年龄：%s，地址：%s" % (name7, age, adress)
print(info2)

# %d 整数占位符  将内容转成整数
# %f 浮点数占位符 将内容转成浮点数
math = 99.8
info3 = "名字：%s，年龄：%d，数学成绩：%f" % (name7, age, math)
print(info3)
# 名字：张三，年龄：19，数学成绩：99.800000

# 字符串格式化的精度控制
# 使用辅助符号"m.n"控制数据的宽度和精度
"""
m：控制宽度 要求是数字（很少用），设置的宽度小于数字自身不生效
.n：控制小数点精度，要求是数字，会进行小数的四舍五入
例如：
%5d：将整数的宽度控制在5位，如数字11，被设置成5d，就会变成：【空格】【空格】【空格】11，用三个控制补足宽度
%5.2f:整数的宽度控制在5位,将小数点精度设置为2
小数点和小数部分也算入宽度，如：11.345 设置了%7.2后，结果是：【空格】【空格】11.35，用2个空格补足宽度，小数部分限制2位后，四舍五入为.35
%.2f:表示不限制宽度，只设置小数点精度为2，如11.345 设置了%.2f,结果是11.35
"""

# 字符串格式化方式2
# 通过f"内容{变量}"的格式来快速格式化 特点：不关注类型和精度
name8 = "李四"
set_up_year = 2005
stock_price = 19.99
# f：format
print(f"我是{name8},我出生于{set_up_year},身价{stock_price}")
# 我是李四,我出生于2005,身价19.99

# 字符串格式化-表达式的格式化
print("字符串的类型：%s" % type("字符串"))
print(f"1*2的结果{1 * 2}")

# python中的input输入。print是输出数据 input是输入数据
# 使用时使用input() 语句可以从键盘获取输入
# 使用一个变量接触(存储)input语句获取的键盘输入数据即可

print("请输入查询的名字：")
my_name = input()
print("查询到的结果：", my_name)

# 十、input()可以在要求使用者输入内容前，输出提示内容的。
# 输入的不管是什么，input默认都是字符串，可以自行转换想要的类型
dpt_airport = input("请输入出发机场：")
print("您输入的机场是：", dpt_airport)

#
